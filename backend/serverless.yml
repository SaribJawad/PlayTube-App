service: playtube-api
frameworkVersion: "4"

plugins:
  - serverless-dotenv-plugin

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-south-1
  environment:
    PORT: ${env:PORT}
    CORS_ORIGIN: ${env:CORS_ORIGIN}
    MONGODB_URI: ${env:MONGODB_URI}
    ACCESS_TOKEN_SECRET: ${env:ACCESS_TOKEN_SECRET}
    ACCESS_TOKEN_EXPIRY: ${env:ACCESS_TOKEN_EXPIRY}
    REFRESH_TOKEN_SECRET: ${env:REFRESH_TOKEN_SECRET}
    REFRESH_TOKEN_EXPIRY: ${env:REFRESH_TOKEN_EXPIRY}
    CLOUDINARY_CLOUD_NAME: ${env:CLOUDINARY_CLOUD_NAME}
    CLOUDINARY_API_KEY: ${env:CLOUDINARY_API_KEY}
    CLOUDINARY_API_SECRET: ${env:CLOUDINARY_API_SECRET}
    CLOUDINARY_URL: ${env:CLOUDINARY_URL}
    aws_access_key_id: ${env:AWS_ACCESS_KEY_ID}
    aws_secret_access_key: ${env:AWS_SECRET_ACCESS_KEY}

functions:
  registerUser:
    handler: src/controllers/user.controller.registerUser
    events:
      - httpApi:
          path: /api/v1/users/register
          method: post
  loginUser:
    handler: src/controllers/user.controller.loginUser
    events:
      - httpApi:
          path: /api/v1/users/login
          method: post

  logOutUser:
    handler: src/controllers/user.controller.logOutUser
    events:
      - httpApi:
          path: /api/v1/users/logout
          method: post

  changeCurrentPassword:
    handler: src/controllers/user.controller.changeCurrentPassword
    events:
      - httpApi:
          path: /api/v1/users/change-password
          method: post

  updateAccountDetails:
    handler: src/controllers/user.controller.updateAccountDetails
    events:
      - httpApi:
          path: /api/v1/users/update-account
          method: patch

  updateUserAvatar:
    handler: src/controllers/user.controller.updateUserAvatar
    events:
      - httpApi:
          path: /api/v1/users/avatar
          method: post

  updateUserCoverImage:
    handler: src/controllers/user.controller.updateUserCoverImage
    events:
      - httpApi:
          path: /api/v1/users/cover-image
          method: patch

  getUserChannelProfile:
    handler: src/controllers/user.controller.getUserChannelProfile
    events:
      - httpApi:
          path: /api/v1/users/c/{username}
          method: get

  getWatchHistory:
    handler: src/controllers/user.controller.getWatchHistory
    events:
      - httpApi:
          path: /api/v1/users/watch-history
          method: get
